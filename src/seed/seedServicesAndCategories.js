// src/seed/seedServicesAndCategories.js

import mongoose from "mongoose";
import dotenv from "dotenv";

// Modelos
import ServiceModel from "../models/Service.js";
import CategoryModel from "../models/Category.js";

// Utils
import { slugify } from "../utils/slugify.js";
import { capitalizeWords } from "../utils/capitalizeWords.js";

// Config
dotenv.config();

// Categor√≠as con slug generado
const categories = [
  { name: "Salud" },
  { name: "Belleza" },
  { name: "Bienestar" },
  { name: "Electricidad" },
  { name: "Plomer√≠a" },
  { name: "Gas" },
  { name: "Alba√±iler√≠a" },
  { name: "Carpinter√≠a" },
  { name: "Tecnolog√≠a" },
  { name: "Limpieza" },
  { name: "Ni√±era" },
  { name: "Cuidado de adultos mayores" },
  { name: "Psicolog√≠a" },
  { name: "Coaching" },
  { name: "Nutrici√≥n" },
  { name: "Veterinaria" },
  { name: "Peluquer√≠a" },
  { name: "Depilaci√≥n" },
  { name: "U√±as" },
  { name: "Dise√±o gr√°fico" },
  { name: "Fotograf√≠a" },
  { name: "Marketing" },
  { name: "Contabilidad" },
  { name: "Asesor√≠a legal" },
  { name: "Mec√°nica" },
].map(cat => ({
  name: capitalizeWords(cat.name),
  slug: slugify(cat.name)
}));

// Servicios (sin slug, se generan autom√°ticamente en modelo)
const services = [
  // mismos servicios que ya ten√≠as‚Ä¶
  { name: "Instalaci√≥n el√©ctrica", description: "Instalaciones completas para hogares", price: 10000, categoryName: "Electricidad" },
  { name: "Reparaci√≥n de enchufes", description: "Soluci√≥n de cortocircuitos y enchufes quemados", price: 2500, categoryName: "Electricidad" },
  { name: "Reparaci√≥n de ca√±os", description: "Soluci√≥n a fugas de agua y ca√±os rotos", price: 3000, categoryName: "Plomer√≠a" },
  { name: "Destapaci√≥n de cloacas", description: "Servicio urgente o programado", price: 4500, categoryName: "Plomer√≠a" },
  { name: "Instalaci√≥n de gas", description: "Habilitado para trabajar con redes de gas", price: 12000, categoryName: "Gas" },
  { name: "Colocaci√≥n de cer√°micos", description: "Pisos y paredes", price: 7000, categoryName: "Alba√±iler√≠a" },
  { name: "Armado de muebles", description: "Armado de muebles a medida", price: 5000, categoryName: "Carpinter√≠a" },
  { name: "Limpieza profunda de hogar", description: "Desinfecci√≥n completa", price: 6000, categoryName: "Limpieza" },
  { name: "Corte de cabello", description: "Cabello corto, largo, con estilo", price: 2000, categoryName: "Peluquer√≠a" },
  { name: "Depilaci√≥n definitiva", description: "Depilaci√≥n l√°ser", price: 8000, categoryName: "Depilaci√≥n" },
  { name: "U√±as esculpidas", description: "Dise√±o y esmaltado", price: 3500, categoryName: "U√±as" },
  { name: "Masaje relajante", description: "Terapia descontracturante", price: 4000, categoryName: "Bienestar" },
  { name: "Psicoterapia individual", description: "Consulta online o presencial", price: 6000, categoryName: "Psicolog√≠a" },
  { name: "Coaching personal", description: "Sesiones motivacionales", price: 5000, categoryName: "Coaching" },
  { name: "Consulta nutricional", description: "Planes alimenticios personalizados", price: 4500, categoryName: "Nutrici√≥n" },
  { name: "Vacunaci√≥n de mascotas", description: "Perros y gatos", price: 2500, categoryName: "Veterinaria" },
  { name: "Cuidado de ni√±os por hora", description: "Con experiencia y referencias", price: 2000, categoryName: "Ni√±era" },
  { name: "Acompa√±amiento de mayores", description: "D√≠a o noche", price: 3500, categoryName: "Cuidado de adultos mayores" },
  { name: "Reparaci√≥n de PC", description: "Formateo, limpieza, cambio de partes", price: 4500, categoryName: "Tecnolog√≠a" },
  { name: "Sesi√≥n de fotos profesional", description: "Book personal o eventos", price: 10000, categoryName: "Fotograf√≠a" },
  { name: "Publicidad en redes sociales", description: "Campa√±as pagas y contenido", price: 9000, categoryName: "Marketing" },
  { name: "Declaraci√≥n de impuestos", description: "Monotributo y aut√≥nomos", price: 8000, categoryName: "Contabilidad" },
  { name: "Consulta legal", description: "Civil, comercial o laboral", price: 7000, categoryName: "Asesor√≠a legal" },
];

const seedDB = async () => {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log("üì¶ Conectado a MongoDB");

    await CategoryModel.deleteMany();
    await ServiceModel.deleteMany();
    console.log("üßπ Datos antiguos eliminados");

    const insertedCategories = await CategoryModel.insertMany(categories);
    console.log("üìö Categor√≠as insertadas:", insertedCategories.length);

    const categoryMap = {};
    insertedCategories.forEach(cat => {
      categoryMap[cat.slug] = cat._id;
    });
    
    // Asignamos ID real a cada servicio usando slug
    const servicesWithCategoryId = services.map(service => {
      const categorySlug = slugify(service.categoryName);
      const categoryId = categoryMap[categorySlug];
    
      if (!categoryId) {
        throw new Error(`‚ùå No se encontr√≥ la categor√≠a para el servicio: "${service.name}" (${service.categoryName})`);
      }
    
      return {
        ...service,
        name: capitalizeWords(service.name),
        slug: slugify(service.name),
        category: categoryId
      };
    });
    
    const insertedServices = await ServiceModel.insertMany(servicesWithCategoryId);
    console.log("üõ†Ô∏è Servicios insertados:", insertedServices.length);

    await mongoose.connection.close();
    console.log("‚úÖ Seed completado y conexi√≥n cerrada");
  } catch (error) {
    console.error("‚ùå Error en el seed:", error);
    process.exit(1);
  }
};

seedDB();
